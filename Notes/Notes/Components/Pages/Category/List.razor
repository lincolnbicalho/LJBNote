@page "/Category"
@using Radzen
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject ICategoryWebService CategoryService
@inject ILogger<List> Logger

<PageTitle>Category List</PageTitle>

<RadzenText TextStyle="TextStyle.H4" TagName="TagName.H4" Class="rz-pt-8">
    Category List
</RadzenText>
<p>This is the list of categories of the notes.</p>


<RadzenRow Class="rz-pb-4">
    <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => Navigation.NavigateTo("Category/Create")) Text="New Category" ButtonStyle="ButtonStyle.Primary" />
</RadzenRow>

@if (categories is null)
{
    <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
        <Template>Wait</Template>
    </RadzenProgressBarCircular>
}
else
{
    <RadzenStack>
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="12" SizeLG="12">
                <RadzenCard>
                    <RadzenDataList AllowVirtualization=true Style="@("min-height:400px;overflow:auto;")"
                                    WrapItems=false AllowPaging=true
                                    Data="@categories" TItem="CategoryModel" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                        <Template Context="c">
                            <RadzenCard Style="width: 100%; padding: 0;">
                                <RadzenRow Gap="0">
                                    <RadzenColumn Size="12" SizeLG="3" Class="rz-p-4 product-title">
                                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Title</RadzenText>
                                        <RadzenText TextAlign="TextAlign.Left" TextStyle="TextStyle.H6" TagName="TagName.H5" class="text-white">@(c.Title)</RadzenText>
                                    </RadzenColumn>
                                    <RadzenColumn Size="12" SizeLG="7" Class="rz-p-4">
                                        <RadzenRow Gap="0">
                                            <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Id</RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body2">@(c.Id)</RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn Size="12" SizeMD="6" SizeLG="5">
                                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Description</RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body2">@(c.Description)</RadzenText>
                                            </RadzenColumn>
                                        </RadzenRow>
                                    </RadzenColumn>
                                    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-4">
                                        <RadzenButton Text="Edit" ButtonStyle="ButtonStyle.Primary" Style="width: 45%" Click="() => EditCategory(c)" />
                                        <RadzenButton Text="Delete" ButtonStyle="ButtonStyle.Danger" Style="width: 45%" Click="() => DeleteCategory(c)" />
                                    </RadzenColumn>
                                </RadzenRow>
                            </RadzenCard>
                        </Template>
                    </RadzenDataList>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
}
<style>
    .product-title {
        min-height: 72px;
        background-color: var(--rz-info-light);
    }

    .price-badge {
        font-size: 16px;
        font-weight: bold;
        line-height: 20px;
        padding: 8px;
    }
</style>
@code {
    private List<CategoryModel>? categories;

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Loading all categories");

        categories = await CategoryService.GetAllCategories();

    }

    private void EditCategory(CategoryModel category)
    {
        Navigation.NavigateTo($"Category/Edit/{category.Id}");
    }

    private void DeleteCategory(CategoryModel category)
    {
        Logger.LogInformation("Deleting categories Id: {id}", category.Id);
        CategoryService.DeleteById(category.Id);
    }
}
